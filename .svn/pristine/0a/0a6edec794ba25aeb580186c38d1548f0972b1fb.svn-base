
using CL_EN;
using Microsoft.Data.SqlClient;
using System.Data;

namespace CL_AD
{
    public class ADproductos
    {
        MiConexion micx = new MiConexion();

        /*
         * PROCESOS DE LISTADO
         */
        public List<ENproductos> VERSION1_SP_listarMenuProductoWeb()
        {
            string cadenaConexion = micx.TraerMiConexion();
            List<ENproductos> lista = new List<ENproductos>();
            try
            {
                using var conexion = new SqlConnection(cadenaConexion);

                using var reader = SqlHelper.ExecuteReader(conexion, CommandType.StoredProcedure, "VERSION1_SP_listarMenuProductoWeb");
                while (reader.Read())
                {
                    ENproductos ent = new ENproductos();
                    ent.Id_producto = DataUtil.ObjectToString(reader["id_producto"]);
                    ent.Codigo = DataUtil.ObjectToString(reader["codigo"]);
                    ent.Nombre = DataUtil.ObjectToString(reader["nombre"]);
                    ent.Descripcion = DataUtil.ObjectToString(reader["descripcion"]);
                    ent.Precio = DataUtil.ObjectToDecimal(reader["precio"]);
                    ent.Descuento = DataUtil.ObjectToDecimal(reader["descuento"]);
                    ent.Stock = DataUtil.ObjectToDecimal(reader["stock"]);
                    ent.NombreSlug = DataUtil.ObjectToString(reader["nombre_slug"]);
                    ent.UrlImagen1 = DataUtil.ObjectToString(reader["urlImagen1"]);
                    ent.UrlImagen2 = DataUtil.ObjectToString(reader["urlImagen2"]);
                    ent.Marca = DataUtil.ObjectToString(reader["marca"]);
                    ent.Categoria = DataUtil.ObjectToString(reader["categoria"]);
                    ent.MensajeConsulta = "Exito";
                    ent.ValorConsulta = "1";
                    lista.Add(ent);
                }
            }
            catch (Exception ex)
            {
                lista.Clear();
                ENproductos ent = new ENproductos();
                ent.MensajeConsulta = "ERROR : " + ex.Message;
                ent.ValorConsulta = "-99";
                lista.Add(ent);
            }
            return lista;
        }


        public List<ENcategorias> VERSION1_SP_listar_categorias_productos()
        {
            string cadenaConexion = micx.TraerMiConexion();
            List<ENcategorias> lista = new List<ENcategorias>();
            try
            {
                using var conexion = new SqlConnection(cadenaConexion);

                using var reader = SqlHelper.ExecuteReader(conexion, CommandType.StoredProcedure, "VERSION1_SP_listar_categorias_productos");
                while (reader.Read())
                {
                    ENcategorias ent = new ENcategorias();
                    ent.Id_categoria = DataUtil.ObjectToString(reader["id_categoria"]);
                    ent.Nombre = DataUtil.ObjectToString(reader["nombre"]);
                    ent.Descripcion = DataUtil.ObjectToString(reader["descripcion"]);
                    ent.Slug_categoria = DataUtil.ObjectToString(reader["slug_categoria"]);
                    ent.Imagen_categoria = DataUtil.ObjectToString(reader["imagen_categoria"]);
                    ent.MensajeConsulta = "Exito";
                    ent.ValorConsulta = "1";
                    lista.Add(ent);
                }
            }
            catch (Exception ex)
            {
                lista.Clear();
                ENcategorias ent = new ENcategorias();
                ent.MensajeConsulta = "ERROR : " + ex.Message;
                ent.ValorConsulta = "-99";
                lista.Add(ent);
            }
            return lista;
        }


        public List<ENmarcas> VERSION1_SP_listar_marcas()
        {
            string cadenaConexion = micx.TraerMiConexion();
            List<ENmarcas> lista = new List<ENmarcas>();
            try
            {
                using var conexion = new SqlConnection(cadenaConexion);

                using var reader = SqlHelper.ExecuteReader(conexion, CommandType.StoredProcedure, "VERSION1_SP_listar_marcas");
                while (reader.Read())
                {
                    ENmarcas ent = new ENmarcas();
                    ent.Id_marcas = DataUtil.ObjectToString(reader["id_marca"]);
                    ent.Nombre = DataUtil.ObjectToString(reader["nombre"]);
                    ent.Descripcion = DataUtil.ObjectToString(reader["descripcion"]);
                    ent.Slug_marca = DataUtil.ObjectToString(reader["slug_marca"]);
                    ent.Imagen_marca = DataUtil.ObjectToString(reader["imagen_marca"]);
                    ent.MensajeConsulta = "Exito";
                    ent.ValorConsulta = "1";
                    lista.Add(ent);
                }
            }
            catch (Exception ex)
            {
                lista.Clear();
                ENmarcas ent = new ENmarcas();
                ent.MensajeConsulta = "ERROR : " + ex.Message;
                ent.ValorConsulta = "-99";
                lista.Add(ent);
            }
            return lista;
        }










        /*
         * PROCESOS DE GUARDADO
         */

        public ENproductos VERSION1_SP_guardarProductoWeb(ENproductos DatosEnviados)
        {
            string cadenaConexion = micx.TraerMiConexion();
            ENproductos ent = new ENproductos();
            try
            {
                using var conexion = new SqlConnection(cadenaConexion);

                SqlParameter[] Parametro = new SqlParameter[12];
                Parametro[0] = new SqlParameter("@codigo", SqlDbType.VarChar);
                Parametro[0].Direction = ParameterDirection.Input;
                Parametro[0].Value = DatosEnviados.Codigo;

                Parametro[1] = new SqlParameter("@nombre", SqlDbType.VarChar);
                Parametro[1].Direction = ParameterDirection.Input;
                Parametro[1].Value = DatosEnviados.Nombre;

                Parametro[2] = new SqlParameter("@descripcion", SqlDbType.VarChar);
                Parametro[2].Direction = ParameterDirection.Input;
                Parametro[2].Value = DatosEnviados.Descripcion;

                Parametro[3] = new SqlParameter("@precio", SqlDbType.Decimal);
                Parametro[3].Direction = ParameterDirection.Input;
                Parametro[3].Value = Convert.ToDecimal(DatosEnviados.Precio);

                Parametro[4] = new SqlParameter("@descuento", SqlDbType.VarChar);
                Parametro[4].Direction = ParameterDirection.Input;
                Parametro[4].Value = Convert.ToDecimal(DatosEnviados.Descuento);

                Parametro[5] = new SqlParameter("@stock", SqlDbType.VarChar);
                Parametro[5].Direction = ParameterDirection.Input;
                Parametro[5].Value = Convert.ToDecimal(DatosEnviados.Stock);

                Parametro[6] = new SqlParameter("@nombre_slug", SqlDbType.VarChar);
                Parametro[6].Direction = ParameterDirection.Input;
                Parametro[6].Value = DatosEnviados.NombreSlug;

                Parametro[7] = new SqlParameter("@urlimagen1", SqlDbType.VarChar);
                Parametro[7].Direction = ParameterDirection.Input;
                Parametro[7].Value = DatosEnviados.UrlImagen1;

                Parametro[8] = new SqlParameter("@urlimagen2", SqlDbType.VarChar);
                Parametro[8].Direction = ParameterDirection.Input;
                Parametro[8].Value = DatosEnviados.UrlImagen2;

                Parametro[9] = new SqlParameter("@id_marca", SqlDbType.VarChar);
                Parametro[9].Direction = ParameterDirection.Input;
                Parametro[9].Value = DatosEnviados.Marca;

                Parametro[10] = new SqlParameter("@id_categoria", SqlDbType.VarChar);
                Parametro[10].Direction = ParameterDirection.Input;
                Parametro[10].Value = DatosEnviados.Categoria;

                Parametro[11] = new SqlParameter("@id_usuario", SqlDbType.VarChar);
                Parametro[11].Direction = ParameterDirection.Input;
                Parametro[11].Value = "1";


                using var reader = SqlHelper.ExecuteReader(conexion, CommandType.StoredProcedure, "VERSION1_SP_guardarProductoWeb", Parametro);
                while (reader.Read())
                {
                    ent.ValorConsulta = DataUtil.ObjectToString(reader["Resultado"]);
                }
            }
            catch (Exception ex)
            {
                ent.MensajeConsulta = "ERROR : " + ex.Message;
                ent.ValorConsulta = "-99";
            }
            return ent;
        }


        public ENcategorias VERSION1_SP_guardar_categorias_productos(ENcategorias DatosEnviados)
        {
            string cadenaConexion = micx.TraerMiConexion();
            ENcategorias ent = new ENcategorias();
            try
            {
                using var conexion = new SqlConnection(cadenaConexion);

                SqlParameter[] Parametro = new SqlParameter[5];
                Parametro[0] = new SqlParameter("@nombre", SqlDbType.VarChar);
                Parametro[0].Direction = ParameterDirection.Input;
                Parametro[0].Value = DatosEnviados.Nombre;

                Parametro[1] = new SqlParameter("@descripcion", SqlDbType.VarChar);
                Parametro[1].Direction = ParameterDirection.Input;
                Parametro[1].Value = DatosEnviados.Descripcion;

                Parametro[2] = new SqlParameter("@slug_categoria", SqlDbType.VarChar);
                Parametro[2].Direction = ParameterDirection.Input;
                Parametro[2].Value = DatosEnviados.Slug_categoria.ToLower();

                Parametro[3] = new SqlParameter("@imagen_categoria", SqlDbType.VarChar);
                Parametro[3].Direction = ParameterDirection.Input;
                Parametro[3].Value = DatosEnviados.Imagen_categoria;

                Parametro[4] = new SqlParameter("@id_usuario", SqlDbType.VarChar);
                Parametro[4].Direction = ParameterDirection.Input;
                Parametro[4].Value = DatosEnviados.Id_usuario;

                using var reader = SqlHelper.ExecuteReader(conexion, CommandType.StoredProcedure, "VERSION1_SP_guardar_categorias_productos", Parametro);
                while (reader.Read())
                {
                    ent.ValorConsulta = DataUtil.ObjectToString(reader["Resultado"]);
                }
            }
            catch (Exception ex)
            {
                ent.MensajeConsulta = "ERROR : " + ex.Message;
                ent.ValorConsulta = "-99";
            }
            return ent;
        }



        public ENmarcas VERSION1_SP_guardar_marcas_productos(ENmarcas DatosEnviados)
        {
            string cadenaConexion = micx.TraerMiConexion();
            ENmarcas ent = new ENmarcas();
            try
            {
                using var conexion = new SqlConnection(cadenaConexion);

                SqlParameter[] Parametro = new SqlParameter[5];
                Parametro[0] = new SqlParameter("@nombre", SqlDbType.VarChar);
                Parametro[0].Direction = ParameterDirection.Input;
                Parametro[0].Value = DatosEnviados.Nombre;

                Parametro[1] = new SqlParameter("@descripcion", SqlDbType.VarChar);
                Parametro[1].Direction = ParameterDirection.Input;
                Parametro[1].Value = DatosEnviados.Descripcion;

                Parametro[2] = new SqlParameter("@slug_marca", SqlDbType.VarChar);
                Parametro[2].Direction = ParameterDirection.Input;
                Parametro[2].Value = DatosEnviados.Slug_marca.ToLower();

                Parametro[3] = new SqlParameter("@imagen_marca", SqlDbType.VarChar);
                Parametro[3].Direction = ParameterDirection.Input;
                Parametro[3].Value = DatosEnviados.Imagen_marca;

                Parametro[4] = new SqlParameter("@id_usuario", SqlDbType.VarChar);
                Parametro[4].Direction = ParameterDirection.Input;
                Parametro[4].Value = DatosEnviados.Id_usuario;

                using var reader = SqlHelper.ExecuteReader(conexion, CommandType.StoredProcedure, "VERSION1_SP_guardar_marcas_productos", Parametro);
                while (reader.Read())
                {
                    ent.ValorConsulta = DataUtil.ObjectToString(reader["Resultado"]);
                }
            }
            catch (Exception ex)
            {
                ent.MensajeConsulta = "ERROR : " + ex.Message;
                ent.ValorConsulta = "-99";
            }
            return ent;
        }
    }
}
